on: [push, pull_request]

name: Format and Clippy

env:
  AS: nasm
  AR: llvm-ar
  CC: clang

jobs:
  clippy:
    name: Clippy
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # Install first since it's needed to build NASM
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "10.0"
          directory: ${{ runner.temp }}/llvm

      - name: install NASM
        uses: ilammy/setup-nasm@v1

      - name: Install toolchain with clippy available
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2023-08-28
          override: true
          components: clippy
      
      - name: Install required cargo
        run: cargo install clippy-sarif sarif-fmt

      - name: Preparation Work
        run: bash sh_script/preparation.sh

      - name: Run rust-clippy for result collection
        run:
          cargo clippy 
          --features remote-attestation,stack-guard,virtio-vsock,virtio-serial,vmcall-interrupt
          --message-format=json | clippy-sarif | tee rust-clippy-results.sarif | sarif-fmt
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: rust-clippy-results.sarif
          wait-for-processing: true
      
      - name: Run rust-clippy
        run: cargo clippy --features remote-attestation,stack-guard,virtio-vsock,virtio-serial,vmcall-interrupt

  rustfmt:
    name: Format
    runs-on: ubuntu-20.04
    steps:

      # Install first since it's needed to build NASM
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "10.0"
          directory: ${{ runner.temp }}/llvm

      - name: install NASM
        uses: ilammy/setup-nasm@v1

      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install toolchain with rustfmt available
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2023-08-28
          override: true
          components: rustfmt

      - name: Preparation Work
        run: bash sh_script/preparation.sh

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
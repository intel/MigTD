on:
  push:
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"
  workflow_dispatch:

name: Library Crates

env:
  AS: nasm
  AR: llvm-ar
  CC: clang
  RUST_TOOLCHAIN: 1.83.0
  TOOLCHAIN_PROFILE: minimal

permissions:
  contents: read

jobs:
  lib-test:
    name: Build Library Crates
    runs-on: ubuntu-20.04
    timeout-minutes: 30

    steps:
      # Install first since it's needed to build NASM
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@e0a8dc9cb8a22e8a7696e8a91a4e9581bec13181 # v2.0.5
        with:
          version: "10.0"
          directory: ${{ runner.temp }}/llvm

      - name: install NASM
        uses: ilammy/setup-nasm@72793074d3c8cdda771dba85f6deafe00623038b # v1.5.2

      - name: Install tools for sgx lib
        run:  sudo apt-get install build-essential ocaml ocamlbuild automake autoconf libtool wget python-is-python3 libssl-dev git cmake perl

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1.0.7
        with:
          profile: ${{ env.TOOLCHAIN_PROFILE }}
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true

      - name: Checkout sources
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          submodules: recursive

      - name: Add `x86_64-unknown-none` target
        run: rustup target add x86_64-unknown-none
  
      - name: Preparation work
        run: bash sh_script/preparation.sh

      - name: Build library crates
        run: cargo xtask lib-build
      
      - name: Test library crates
        run: cargo xtask lib-test
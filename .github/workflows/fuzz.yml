on:
  push:
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"
  workflow_dispatch:

name: Fuzzing Test

env:
  AS: nasm
  AR_x86_64_unknown_none: llvm-ar
  CC_x86_64_unknown_none: clang
  RUST_TOOLCHAIN: nightly
  TOOLCHAIN_PROFILE: minimal
  AFL_NO_AFFINITY: 1

permissions:
  contents: read

jobs:
  test:
    name: Fuzzing Test

    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1.0.7
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          profile: minimal
          override: true
          components: rust-src, llvm-tools-preview
      
      - name: install NASM
        uses: ilammy/setup-nasm@72793074d3c8cdda771dba85f6deafe00623038b # v1.5.2
      
      - name: Install AFL
        run: cargo install cargo-afl
      
      - name: Install Cargo-Fuzz
        run: cargo install cargo-fuzz
      
      - name: Select default toolchain
        run: rustup default ${{ env.RUST_TOOLCHAIN }}

      - name: Preparation work
        run: bash sh_script/preparation.sh

      - name: Run all afl fuzzing test cases
        run: bash sh_script/fuzzing.sh -n afl_all -t 10

      - name: Run all libfuzzer fuzzing test cases
        run: bash sh_script/fuzzing.sh -n libfuzzer_all -t 60